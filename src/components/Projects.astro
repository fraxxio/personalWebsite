---
import ProjectCard from "../components/ProjectCard.astro";
import { getCollection, getEntry } from "astro:content";

const projects = await getCollection("projects");
const featured = await getEntry("projects", "mocksocial");
---

<section id='projects' class='mb-40 mt-20 max-[1580px]:mt-0'>
  <div class='scroller py-40' data-speed='slow'>
    <ul class='tag-list scroller__inner text-8xl font-semibold uppercase'>
      <li>Projects</li>
      <li>Projects</li>
      <li>Projects</li>
      <li>Projects</li>
      <li>Projects</li>
      <li>Projects</li>
      <li>Projects</li>
    </ul>
  </div>
  <div class='mx-[20%] max-md:mx-4 grid grid-cols-2 gap-x-8 max-[1580px]:grid-cols-1'>
    <ProjectCard
      featured={featured.data.featured}
      title={featured.data.title}
      description={featured.data.description}
      tags={featured.data.tags}
      thumbnail={featured.data.thumbnail}
      slug={featured.slug}
    />
    {
      projects.map(
        (project) =>
          !project.data.featured && (
            <ProjectCard
              featured={project.data.featured}
              title={project.data.title}
              description={project.data.description}
              tags={project.data.tags}
              thumbnail={project.data.thumbnail}
              slug={project.slug}
            />
          )
      )
    }
  </div>
</section>

<script>
  const scroller = document.querySelector(".scroller") as HTMLElement;
  if (!window.matchMedia("(prefers-reduced-motion: reduce)").matches) {
    addAnimation();
  }

  function addAnimation() {
    scroller.setAttribute("data-animated", "true");

    const scrollerInner = scroller.querySelector(".scroller__inner") as HTMLElement;
    const scrollerContent = Array.from(scrollerInner.children);

    scrollerContent.forEach((item) => {
      const duplicatedItem = item.cloneNode(true) as HTMLElement;
      duplicatedItem.setAttribute("aria-hidden", "true");
      scrollerInner.appendChild(duplicatedItem);
    });
  }
</script>

<style>
  .scroller {
    width: 100%;
  }

  .scroller__inner {
    padding-block: 1rem;
    display: flex;
    flex-wrap: wrap;
    gap: 3rem;
  }

  .scroller[data-animated="true"] {
    overflow: hidden;
  }

  .scroller[data-animated="true"] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s) var(--_animation-direction, forwards) linear
      infinite;
  }

  .scroller[data-speed="slow"] {
    --_animation-duration: 60s;
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
</style>
